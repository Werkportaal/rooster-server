name: pipeline

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #  analyse:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout 🛎️
  #        uses: actions/checkout@v2
  #        with:
  #          persist-credentials: false
  #
  #      - name: SonarQube 💃
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #          SONAR_TOKEN: ${{ secrets.SONARQUBE_SECRET_TOKEN }}
  #          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
  #        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=K4CZP3R_s6p-create-service_AX_5cOyx4Hw7FhtMoV9A

  test:
    #    needs: [analyse]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build 👷
        run: mvn package

      - name: Test 🥺
        run: mvn test

  publish_image:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/werkportaal/rooster-server:main
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platfroms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

